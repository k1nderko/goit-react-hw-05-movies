{"version":3,"file":"static/js/989.da3b8926.chunk.js","mappings":"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","sources":["API/movie-api.js","components/MoviesList/MoviesList.jsx","components/MoviePageForm/MoviePageForm.jsx","views/MoviesPage/MoviesPage.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '020b5c65bb738eda3d675ffce0df7887';\n\nasync function fetchFilmsTrending() {\n  const response = await fetch(\n    `${BASE_URL}trending/all/day?api_key=${API_KEY}`\n  );\n  return await response.json();\n}\n\nasync function fetchFilmsByQuery(query) {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}`\n  );\n  return await response.json();\n}\n\nasync function fetchFilmById(id) {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return await response.json();\n}\n\nasync function fetchFilmCast(id) {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return await response.json();\n}\n\nasync function fetchFilmReviews(id) {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return await response.json();\n}\n\nconst api = {\n  fetchFilmsTrending,\n  fetchFilmsByQuery,\n  fetchFilmById,\n  fetchFilmCast,\n  fetchFilmReviews,\n};\n\nexport default api;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {films.map(film => (\n        <li key={film.id}>\n          <Link to={`/movies/${film.id}`} state={{ from: location }}>\n            {film.original_title || film.name}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n","import { useState } from 'react';\n\nconst MoviePageForm = ({ onSubmit }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputChange = e => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmitForm = e => {\n    e.preventDefault();\n    if (inputValue.trim() === '') {\n      return;\n    }\n    onSubmit({ query: inputValue });\n\n    setInputValue('');\n  };\n\n  return (\n    <form onSubmit={handleSubmitForm}>\n      <input\n        value={inputValue}\n        type=\"text\"\n        placeholder=\"Search films\"\n        onChange={handleInputChange}\n      />\n      <button type=\"submit\">\n        <span>Search</span>\n      </button>\n    </form>\n  );\n};\n\nexport default MoviePageForm;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport MoviePageForm from '../../components/MoviePageForm';\nimport moviesAPI from '../../API/movie-api';\nimport MoviesList from '../../components/MoviesList';\n\nconst MoviesPage = () => {\n  const [searchQuery, setSearchQuery] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const query = searchQuery.get('query');\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    const fetchMovies = async () => {\n      try {\n        const movies = await moviesAPI.fetchFilmsByQuery(query);\n        setMovies(movies.results);\n      } catch (error) {\n        setError('Something went wrong. Please try again later.');\n      }\n    };\n\n    fetchMovies();\n  }, [query]);\n\n  return (\n    <div>\n      <MoviePageForm onSubmit={setSearchQuery} />\n\n      {movies.length > 0 && <MoviesList films={movies} />}\n\n      {movies.length === 0 && query && (\n        <p>We don't have any movies for this query.</p>\n      )}\n\n      {error && <p>{error}</p>}\n    </div>\n  );\n};\n\nexport default MoviesPage;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["BASE_URL","API_KEY","_fetchFilmsTrending","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","fetch","concat","sent","json","abrupt","stop","apply","arguments","_fetchFilmsByQuery","_callee2","query","_context2","_fetchFilmById","_callee3","id","_context3","_fetchFilmCast","_callee4","_context4","_fetchFilmReviews","_callee5","_context5","api","fetchFilmsTrending","fetchFilmsByQuery","_x","fetchFilmById","_x2","fetchFilmCast","_x3","fetchFilmReviews","_x4","_ref","films","location","useLocation","_jsx","children","map","film","Link","to","state","from","original_title","name","onSubmit","_useState","useState","_useState2","_slicedToArray","inputValue","setInputValue","_jsxs","e","preventDefault","trim","value","type","placeholder","onChange","target","_useSearchParams","useSearchParams","_useSearchParams2","searchQuery","setSearchQuery","movies","setMovies","_useState3","_useState4","error","setError","get","useEffect","fetchMovies","_movies","moviesAPI","results","t0","MoviePageForm","length","MoviesList","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","then","fn","self","this","args","err","undefined"],"sourceRoot":""}